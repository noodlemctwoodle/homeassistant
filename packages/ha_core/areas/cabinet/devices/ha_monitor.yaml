## Home Assistant Monitoring Configuration

notify:
  - platform: html5
    name: firebase
    vapid_pub_key: !secret gcp_pub_key
    vapid_prv_key: !secret gcp_prv_key
    vapid_email: !secret gcp_email

  - platform: discord
    name: discord
    token: !secret bot_token


alert:

# Update is available - un-acknowledgeble, auto-dismiss, me only
# Wait 5 minutes before first to give core config check time to run
  ha_update_available:
    name: HA has an update
    entity_id: sensor.updater_core
    state: 'on'
    can_acknowledge: false
    repeat: 
    - 5
    - 360
    skip_first: true
    title: 'Update for HA available'
    message: "New version is {{ state_attr('sensor.updater_core', 'newest_version') }}. Currently on {{ state_attr('sensor.updater_core', 'current_version') }}"
    notifiers:
    - firebase_home_assistant
    - mobile_app_pixel_4_xl
    data:
      tag: 'ha-update-available'
      url: !secret ha_update
      ttl: 21600

  # Supervisor update is available - un-acknowledgeable, auto-dismiss, me only
  supervisor_update_available:
    name: Supervisor has an update
    entity_id: binary_sensor.updater_supervisor
    state: 'on'
    can_acknowledge: false
    repeat: 360
    title: 'Update for HA Supervisor available'
    message: "New version is {{ state_attr('sensor.supervisor_updates', 'newest_version') }}. Currently on {{ state_attr('sensor.supervisor_updates', 'current_version') }}"
    notifiers:
    - firebase_home_assistant
    - mobile_app_pixel_4_xl
    data:
      tag: 'supervisor-update-available'
      url: !secret supervisor_update
      ttl: 21600

  # Audio update is available - un-acknowledgeable, auto-dismiss, me only
  audio_update_available:
    name: Audio has an update
    entity_id: sensor.updater_audio
    state: 'on'
    can_acknowledge: false
    repeat: 360
    title: 'Update for HA Audio available'
    message: "New version is {{ state_attr('sensor.updater_audio', 'newest_version') }}. Currently on {{ state_attr('sensor.updater_audio', 'current_version') }}"
    notifiers:
    - firebase_home_assistant
    - mobile_app_pixel_4_xl
    data:
      tag: 'audio_update_available'
      url: !secret audio_update
      ttl: 21600

  # DNS update is available - un-acknowledgeable, auto-dismiss, me only
  dns_update_available:
    name: DNS has an update
    entity_id: sensor.updater_dns
    state: 'on'
    can_acknowledge: false
    repeat: 360
    title: 'Update for HA DNS available'
    message: "New version is {{ state_attr('sensor.updater_dns', 'newest_version') }}. Currently on {{ state_attr('sensor.updater_dns', 'current_version') }}"
    notifiers:
    - firebase_home_assistant
    - mobile_app_pixel_4_xl
    data:
      target: ''
      tag: 'dns_update_available'
      url: !secret dns_update
      ttl: 21600

  # CLI update is available - un-acknowledgeable, auto-dismiss, me only
  cli_update_available:
    name: CLI has an update
    entity_id: sensor.updater_cli
    state: 'on'
    can_acknowledge: false
    repeat: 360
    title: 'Update for HA CLI available'
    message: "New version is {{ state_attr('sensor.updater_cli', 'newest_version') }}. Currently on {{ state_attr('sensor.updater_cli', 'current_version') }}"
    notifiers:
    - firebase_home_assistant
    - mobile_app_pixel_4_xl
    data:
      target: ''
      tag: 'cli_update_available'
      url: !secret cli_update
      ttl: 21600

  # HACS repos have updates available - unacknowledgeable, auto-dismiss, me only
  hacs_update_available:
    name: HACS repos have updates
    entity_id: binary_sensor.updater_hacs
    state: 'on'
    can_acknowledge: false
    repeat: 360
    title: "Updates available in {{ states('sensor.hacs') }} HACS repo{% if states('sensor.hacs') | int > 1 %}s{% endif %}"
    message: ""
    notifiers:
      - firebase_home_assistant
      - mobile_app_pixel_4_xl
    data:
      tag: 'hacs-update-available'
      url: !secret hacs_update
      ttl: 21600

  # Addons have updates available - unacknowledgeable, auto-dismiss, me only
  addon_update_available:
    name: Addons have updates
    entity_id: binary_sensor.updater_addons
    state: 'on'
    can_acknowledge: false
    repeat: 360
    title: "Updates available for {{ states('sensor.supervisor_updates') }} HA addon{% if states('sensor.supervisor_updates') | int > 1 %}s{% endif %}"
    message: ""
    notifiers:
    - firebase_home_assistant
    - mobile_app_pixel_4_xl
    data:
      tag: 'addon-update-available'
      url: !secret addon_update
      ttl: 21600


binary_sensor:

  - platform: template
    sensors:
      # True if there's an update available for supervisor
      updater_supervisor:
        friendly_name: 'Updater - Supervisor'
        device_class: problem
        value_template: "{{ state_attr('sensor.supervisor_updates', 'current_version') != state_attr('sensor.supervisor_updates', 'newest_version') }}"
        availability_template: "{{ (states('sensor.supervisor_updates') | int(-1)) > -1 }}"

      # True if there's updates available for any HACS components
      updater_hacs:
        friendly_name: 'Updater - HACS'
        device_class: problem
        value_template: "{{ states('sensor.hacs') | int > 0 }}"

      # True if there's updates available for any addons
      updater_addons:
        friendly_name: 'Updater - Addons'
        device_class: problem
        value_template: "{{ states('sensor.supervisor_updates') | int > 0 }}"

sensor:

## SYSTEM DETAILS
# Version Sensor
# https://www.home-assistant.io/integrations/version/

  - platform: version

# Time & Date
# https://www.home-assistant.io/integrations/time_date/

  - platform: time_date
    display_options:
      - time
      - date
      - date_time
      - time_date
      - time_utc
      - beat


# MariaDB Size Sensor
  - platform: sql
    db_url: !secret db_url
    queries:
      - name: 'Home Assistant DB size'
        query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1048576, 2) "value" FROM information_schema.tables WHERE table_schema="homeassistant_db" GROUP BY table_schema;'
        column: 'value'
        unit_of_measurement: MB 

  - platform: command_line
    name: Supervisor updates
    command: 'curl http://supervisor/supervisor/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version,"addons":[.data.addons[] | select(.version != .installed)]}'''
    value_template: "{{ value_json.addons | length }}"
    json_attributes:
    - newest_version
    - current_version
    - addons

  # Sensors to track updates to other core components (audio, dns and CLI)
  - platform: command_line
    name: Updater Audio
    command: 'curl http://supervisor/audio/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version}'''
    value_template: "{% if value_json.newest_version != value_json.current_version %}on{% else %}off{% endif %}"
    json_attributes:
    - newest_version
    - current_version

  - platform: command_line
    name: Updater DNS
    command: 'curl http://supervisor/dns/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version}'''
    value_template: "{% if value_json.newest_version != value_json.current_version %}on{% else %}off{% endif %}"
    json_attributes:
    - newest_version
    - current_version

  - platform: command_line
    name: Updater CLI
    command: 'curl http://supervisor/cli/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version}'''
    value_template: "{% if value_json.newest_version != value_json.current_version %}on{% else %}off{% endif %}"
    json_attributes:
    - newest_version
    - current_version

    # Alternate updater sensor for core since binary_sensor.updater is very slow to recognize updates
  - platform: command_line
    name: Updater Core
    command: 'curl http://supervisor/core/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version}'''
    value_template: "{% if value_json.newest_version != value_json.current_version %}on{% else %}off{% endif %}"
    json_attributes:
    - newest_version
    - current_version
  
  
# RESTful Sensor
## https://www.home-assistant.io/integrations/rest/

# HASSIO Version
  - platform: rest
    resource: https://s3.amazonaws.com/hassio-version/stable.json
    name: Latest HA Version
    value_template: "{{ value_json.homeassistant.intel-nuc }}"
    scan_interval: 3600

# Glances Addon
  - platform: rest
    resource: !secret glances_rest_url
    name: Glances Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - version_latest

# VSCode Addon
  - platform: rest
    resource: !secret vscode_rest_url
    name: VSCode Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - version_latest

# ESPHome Addon
  - platform: rest
    resource: !secret esphome_rest_url
    name: ESPHome Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - version_latest

# PHPMyAdmin Addon
  - platform: rest
    resource: !secret phpmyadmin_rest_url
    name: PHPMyAdmin Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - version_latest

# ADB Addon
  - platform: rest
    resource: !secret adb_rest_url
    name: ADB Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - version_latest

# Deconz Addon
  - platform: rest
    resource: !secret deconz_rest_url
    name: Deconz Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - version_latest

# Mosquitto Addon
  - platform: rest
    resource: !secret mosquitto_rest_url
    name: Mosquitto Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - version_latest

# SSH & Terminal Addon
  - platform: rest
    resource: !secret ssh_and_terminal_rest_url
    name: SSH and Terminal Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - version_latest

# MariaDB Addon
  - platform: rest
    resource: !secret mariadb_rest_url
    name: MariaDB Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - version_latest

# Node-Red Addon
  - platform: rest
    resource: !secret node_red_rest_url
    name: Node-Red Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - version_latest

switch:

  - platform: template
    switches:

# Glances Switch Template
      glances_addon:
        value_template: "{{ is_state('sensor.glances_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: a0d7b954_glances
        turn_off:
          service: hassio.addon_stop
          data:
            addon: a0d7b954_glances

# VSCode Switch Template
      vscode_addon:
        value_template: "{{ is_state('sensor.vscode_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: a0d7b954_vscode
        turn_off:
          service: hassio.addon_stop
          data:
            addon: a0d7b954_vscode

# ESPHome Switch Template
      esphome_addon:
        value_template: "{{ is_state('sensor.esphome_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: 15ef4d2f_esphome
        turn_off:
          service: hassio.addon_stop
          data:
            addon: 15ef4d2f_esphome

# PHP MyAdmin Switch Template
      phpmyadmin_addon:
        value_template: "{{ is_state('sensor.phpmyadmin_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: a0d7b954_phpmyadmin
        turn_off:
          service: hassio.addon_stop
          data:
            addon: a0d7b954_phpmyadmin

# ADB Switch Template
      adb_addon:
        value_template: "{{ is_state('sensor.adb_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: a0d7b954_adb
        turn_off:
          service: hassio.addon_stop
          data:
            addon: a0d7b954_adb

# Deconz Switch Template
      deconz_addon:
        value_template: "{{ is_state('sensor.deconz_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: core_deconz
        turn_off:
          service: hassio.addon_stop
          data:
            addon: core_deconz

# Mosquitto Switch Template
      mosquitto_addon:
        value_template: "{{ is_state('sensor.mosquitto_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: core_mosquitto
        turn_off:
          service: hassio.addon_stop
          data:
            addon: core_mosquitto

# SSH & Terminal Switch Template
      ssh_and_terminal_addon:
        value_template: "{{ is_state('sensor.ssh_and_terminal_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: core_ssh
        turn_off:
          service: hassio.addon_stop
          data:
            addon: core_ssh

# Maria dB Switch Template
      mariadb_addon:
        value_template: "{{ is_state('sensor.mariadb_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: core_mariadb
        turn_off:
          service: hassio.addon_stop
          data:
            addon: core_mariadb

# Node Red Switch Template
      node_red_addon:
        value_template: "{{ is_state('sensor.node_red_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: a0d7b954_nodered
        turn_off:
          service: hassio.addon_stop
          data:
            addon: a0d7b954_nodered


automation:

# Check New Versions
  - alias: Check config for update
    description: Starts the check config addon when an update becomes available
    trigger:
    - entity_id: binary_sensor.updater
      platform: state
      to: 'on'
    condition: []
    action:
    - data:
        addon: core_check_config
      service: hassio.addon_start



